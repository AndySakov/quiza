[debug] 
[debug] Initial source changes: 
[debug] 	removed:Set(C:\Users\lenovo\Documents\code\scala\projectz\orm\src\main\scala\com\orm\api\Api.scala)
[debug] 	added: Set(C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\Question.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\DoubleAnswer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\Api.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\QuadraticAnswer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\Answer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\ui\UI.scala)
[debug] 	modified: Set()
[debug] Invalidated products: Set(C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api.class, C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api$Currency$.class, C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api$Rate$.class, C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api$.class, C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api$Currency.class, C:\Users\lenovo\Documents\code\scala\projectz\orm\target\scala-2.13\classes\com\orm\api\Api$Rate.class)
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set(com.orm.api.Api.Rate, com.orm.api.Api.Currency, com.orm.api.Api)
[debug] 
[debug] Sources indirectly invalidated by:
[debug] 	product: Set(C:\Users\lenovo\Documents\code\scala\projectz\orm\src\main\scala\com\orm\api\Api.scala)
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set(com.orm.api.Api.Rate, com.orm.api.Api.Currency, com.orm.api.Api)
[debug] All initially invalidated sources:Set(C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\Question.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\DoubleAnswer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\Api.scala, C:\Users\lenovo\Documents\code\scala\projectz\orm\src\main\scala\com\orm\api\Api.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\QuadraticAnswer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\api\types\Answer.scala, C:\Users\lenovo\Documents\code\scala\projectz\quiza\src\main\scala\com\mathapp\ui\UI.scala)
[debug] Initial set of included nodes: com.orm.api.Api.Rate, com.orm.api.Api.Currency, com.orm.api.Api
[debug] Recompiling all sources: number of invalidated sources > 50.0% of all sources
[info] Compiling 6 Scala sources to C:\Users\lenovo\Documents\code\scala\projectz\quiza\target\scala-2.13\classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1
[debug] Getting org.scala-sbt:compiler-bridge_2.13:1.3.5:compile for Scala 2.13.1
[debug] [zinc] Running cached compiler 53dbc5ca for Scala compiler version 2.13.1
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-Ymacro-annotations
[debug] 	-bootclasspath
[debug] 	C:\Program Files\Java\jdk1.8.0_152\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_152\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_152\jre\classes;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.13.1\scala-library-2.13.1.jar
[debug] 	-classpath
[debug] 	C:\Users\lenovo\Documents\code\scala\projectz\quiza\target\scala-2.13\classes;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalafx\scalafx_2.13\14-R19\scalafx_2.13-14-R19.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\requests_2.13\0.6.5\requests_2.13-0.6.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\upickle_2.13\0.9.5\upickle_2.13-0.9.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalafx\scalafxml-core-sfx8_2.13\0.5\scalafxml-core-sfx8_2.13-0.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\circe\circe-core_2.13\0.12.3\circe-core_2.13-0.12.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\circe\circe-generic_2.13\0.12.3\circe-generic_2.13-0.12.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\circe\circe-parser_2.13\0.12.3\circe-parser_2.13-0.12.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-base\14.0.1\javafx-base-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-controls\14.0.1\javafx-controls-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-fxml\14.0.1\javafx-fxml-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-graphics\14.0.1\javafx-graphics-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-media\14.0.1\javafx-media-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-swing\14.0.1\javafx-swing-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-web\14.0.1\javafx-web-14.0.1-win.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.13.1\scala-reflect-2.13.1.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.13\0.6.2\geny_2.13-0.6.2.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\ujson_2.13\0.9.5\ujson_2.13-0.9.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\upack_2.13\0.9.5\upack_2.13-0.9.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\upickle-implicits_2.13\0.9.5\upickle-implicits_2.13-0.9.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scalafx\scalafxml-core-macros-sfx8_2.13\0.5\scalafxml-core-macros-sfx8_2.13-0.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\circe\circe-numbers_2.13\0.12.3\circe-numbers_2.13-0.12.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-core_2.13\2.0.0\cats-core_2.13-2.0.0.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\chuusai\shapeless_2.13\2.3.3\shapeless_2.13-2.3.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\io\circe\circe-jawn_2.13\0.12.3\circe-jawn_2.13-0.12.3.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-graphics\14.0.1\javafx-graphics-14.0.1.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-controls\14.0.1\javafx-controls-14.0.1.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-base\14.0.1\javafx-base-14.0.1.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\openjfx\javafx-media\14.0.1\javafx-media-14.0.1.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\upickle-core_2.13\0.9.5\upickle-core_2.13-0.9.5.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-macros_2.13\2.0.0\cats-macros_2.13-2.0.0.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\typelevel\cats-kernel_2.13\2.0.0\cats-kernel_2.13-2.0.0.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\typelevel\jawn-parser_2.13\0.14.2\jawn-parser_2.13-0.14.2.jar;C:\Users\lenovo\AppData\Local\Coursier\cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-collection-compat_2.13\2.0.0\scala-collection-compat_2.13-2.0.0.jar
[debug] Scala compilation took 11.4961688 s
[info] Done compiling.
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.QuadraticAnswer...
[debug] Initial set of included nodes: com.mathapp.api.types.QuadraticAnswer
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.QuadraticAnswer)
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.QuadraticEquation: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(com;mathapp;api;types;QuadraticAnswer;init;,[Default]), UsedName(QuadraticAnswer,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.LinearEquation: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(com;mathapp;api;types;QuadraticAnswer;init;,[Default]), UsedName(QuadraticAnswer,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] Change NamesChange(com.mathapp.api.types.QuadraticAnswer,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(com;mathapp;api;types;QuadraticAnswer;init;,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(QuadraticAnswer,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]))) invalidates 3 classes due to The com.mathapp.api.types.QuadraticAnswer has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(com;mathapp;api;types;QuadraticAnswer;init;,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(QuadraticAnswer,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.QuadraticAnswer)
[debug] 	> 
[debug] 	> by member reference: Set(com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation)
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Equation...
[debug] Initial set of included nodes: com.mathapp.api.types.Equation
[debug] Including com.mathapp.api.types.Question.QuadraticEquation by com.mathapp.api.types.Equation
[debug] Including com.mathapp.api.types.Question.LinearEquation by com.mathapp.api.types.Equation
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation, com.mathapp.api.types.Equation)
[debug] Change NamesChange(com.mathapp.api.types.Equation,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName($init$,[Default]), UsedName(Equation,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 3 classes due to The com.mathapp.api.types.Equation has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName($init$,[Default]), UsedName(Equation,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation, com.mathapp.api.types.Equation)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.orm.api.Api.Currency...
[debug] Initial set of included nodes: com.orm.api.Api.Currency
[debug] Invalidated by transitive inheritance dependency: Set(com.orm.api.Api.Currency)
[debug] Change NamesChange(com.orm.api.Api.Currency,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(Currency,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(desc,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(code,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(clone,[Default]), UsedName(com;orm;api;Api;Currency;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.orm.api.Api.Currency has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(Currency,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(desc,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(code,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(clone,[Default]), UsedName(com;orm;api;Api;Currency;init;,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.orm.api.Api.Currency)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.DoubleAnswer...
[debug] Initial set of included nodes: com.mathapp.api.types.DoubleAnswer
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.DoubleAnswer)
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.Sum: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(DoubleAnswer,[Default]), UsedName(com;mathapp;api;types;DoubleAnswer;init;,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] Change NamesChange(com.mathapp.api.types.DoubleAnswer,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(DoubleAnswer,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(com;mathapp;api;types;DoubleAnswer;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]))) invalidates 2 classes due to The com.mathapp.api.types.DoubleAnswer has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(DoubleAnswer,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(com;mathapp;api;types;DoubleAnswer;init;,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.DoubleAnswer)
[debug] 	> 
[debug] 	> by member reference: Set(com.mathapp.api.types.Question.Sum)
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Answer...
[debug] Initial set of included nodes: com.mathapp.api.types.Answer
[debug] Including com.mathapp.api.types.DoubleAnswer by com.mathapp.api.types.Answer
[debug] Including com.mathapp.api.types.QuadraticAnswer by com.mathapp.api.types.Answer
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Answer, com.mathapp.api.types.DoubleAnswer, com.mathapp.api.types.QuadraticAnswer)
[debug] The following modified names cause invalidation of com.mathapp.api.types.DoubleAnswer: Set(UsedName(com;mathapp;api;types;Answer;init;,[Default]), UsedName(Answer,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.QuadraticEquation: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Answer,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question: Set(UsedName(toString,[Default]), UsedName(Answer,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.QuadraticAnswer: Set(UsedName(com;mathapp;api;types;Answer;init;,[Default]), UsedName(Answer,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.Sum: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Answer,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.Sum: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Answer,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.QuadraticEquation: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(Answer,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] The following modified names cause invalidation of com.mathapp.api.types.Question.LinearEquation: Set(UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(hashCode,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))
[debug] Change NamesChange(com.mathapp.api.types.Answer,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(com;mathapp;api;types;Answer;init;,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(Answer,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 7 classes due to The com.mathapp.api.types.Answer has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(com;mathapp;api;types;Answer;init;,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(Answer,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Answer, com.mathapp.api.types.DoubleAnswer, com.mathapp.api.types.QuadraticAnswer)
[debug] 	> 
[debug] 	> by member reference: Set(com.mathapp.api.types.DoubleAnswer, com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation, com.mathapp.api.types.Question, com.mathapp.api.types.QuadraticAnswer, com.mathapp.api.types.Question.Sum)
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Question...
[debug] Initial set of included nodes: com.mathapp.api.types.Question
[debug] Including com.mathapp.api.types.Equation by com.mathapp.api.types.Question
[debug] Including com.mathapp.api.types.Question.QuadraticEquation by com.mathapp.api.types.Equation
[debug] Including com.mathapp.api.types.Question.LinearEquation by com.mathapp.api.types.Equation
[debug] Including com.mathapp.api.types.Question.Sum by com.mathapp.api.types.Question
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation, com.mathapp.api.types.Question, com.mathapp.api.types.Equation, com.mathapp.api.types.Question.Sum)
[debug] The following modified names cause invalidation of com.mathapp.api.Api: Set(UsedName(randQuestion,[Default]), UsedName(Question,[Default]), UsedName(run,[Default]), UsedName(Difficulty,[Default]))
[debug] Change NamesChange(com.mathapp.api.types.Question,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(LinearEquation,[Default]), UsedName(eq,[Default]), UsedName(QuadraticEquation,[Default]), UsedName(randVariable,[Default]), UsedName(==,[Default]), UsedName(SignedOp,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(randOp,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Variable,[Default]), UsedName(questions,[Default]), UsedName(randQuestion,[Default]), UsedName(Question,[Default]), UsedName(clone,[Default]), UsedName(randType,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(Sum,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Operator,[Default]), UsedName(run,[Default]), UsedName(questionNames,[Default]), UsedName(Difficulty,[Default]), UsedName(randNumber,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 6 classes due to The com.mathapp.api.types.Question has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(LinearEquation,[Default]), UsedName(eq,[Default]), UsedName(QuadraticEquation,[Default]), UsedName(randVariable,[Default]), UsedName(==,[Default]), UsedName(SignedOp,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(randOp,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(Variable,[Default]), UsedName(questions,[Default]), UsedName(randQuestion,[Default]), UsedName(Question,[Default]), UsedName(clone,[Default]), UsedName(randType,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(Sum,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Operator,[Default]), UsedName(run,[Default]), UsedName(questionNames,[Default]), UsedName(Difficulty,[Default]), UsedName(randNumber,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Question.QuadraticEquation, com.mathapp.api.types.Question.LinearEquation, com.mathapp.api.types.Question, com.mathapp.api.types.Equation, com.mathapp.api.types.Question.Sum)
[debug] 	> 
[debug] 	> by member reference: Set(com.mathapp.api.Api)
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Question.QuadraticEquation...
[debug] Initial set of included nodes: com.mathapp.api.types.Question.QuadraticEquation
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Question.QuadraticEquation)
[debug] Change NamesChange(com.mathapp.api.types.Question.QuadraticEquation,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(QuadraticEquation,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(c,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(a,[Default]), UsedName(com;mathapp;api;types;Question;QuadraticEquation;init;,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(b,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.mathapp.api.types.Question.QuadraticEquation has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(QuadraticEquation,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(c,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(a,[Default]), UsedName(com;mathapp;api;types;Question;QuadraticEquation;init;,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(b,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Question.QuadraticEquation)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.Api...
[debug] Initial set of included nodes: com.mathapp.api.Api
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.Api)
[debug] Change NamesChange(com.mathapp.api.Api,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(genRandTest,[Default]), UsedName(main,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Api,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.mathapp.api.Api has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(genRandTest,[Default]), UsedName(main,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Api,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.Api)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Question.Sum...
[debug] Initial set of included nodes: com.mathapp.api.types.Question.Sum
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Question.Sum)
[debug] Change NamesChange(com.mathapp.api.types.Question.Sum,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(op,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(lhs,[Default]), UsedName(ne,[Default]), UsedName(rhs,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(Sum,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(com;mathapp;api;types;Question;Sum;init;,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.mathapp.api.types.Question.Sum has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(op,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(lhs,[Default]), UsedName(ne,[Default]), UsedName(rhs,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(Sum,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(com;mathapp;api;types;Question;Sum;init;,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Question.Sum)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.api.types.Question.LinearEquation...
[debug] Initial set of included nodes: com.mathapp.api.types.Question.LinearEquation
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.api.types.Question.LinearEquation)
[debug] Change NamesChange(com.mathapp.api.types.Question.LinearEquation,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(o,[Default]), UsedName(LinearEquation,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(op,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(com;mathapp;api;types;Question;LinearEquation;init;,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(x,[Default]))) invalidates 1 classes due to The com.mathapp.api.types.Question.LinearEquation has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(andThen,[Default]), UsedName(wait,[Default]), UsedName(o,[Default]), UsedName(LinearEquation,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(points,[Default]), UsedName(isInstanceOf,[Default]), UsedName(expr,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(op,[Default]), UsedName(apply,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName(compose,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(productPrefix,[Default]), UsedName(clone,[Default]), UsedName(ans,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(diff,[Default]), UsedName(asInstanceOf,[Default]), UsedName(run,[Default]), UsedName(com;mathapp;api;types;Question;LinearEquation;init;,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(x,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.api.types.Question.LinearEquation)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.orm.api.Api.Rate...
[debug] Initial set of included nodes: com.orm.api.Api.Rate
[debug] Invalidated by transitive inheritance dependency: Set(com.orm.api.Api.Rate)
[debug] Change NamesChange(com.orm.api.Api.Rate,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(symbol,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(Rate,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(com;orm;api;Api;Rate;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]))) invalidates 1 classes due to The com.orm.api.Api.Rate has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(productIterator,[Default]), UsedName(canEqual,[Default]), UsedName(copy$default$1,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(symbol,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(productElementNames,[Default]), UsedName(productElement,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(synchronized,[Default]), UsedName(apply,[Default]), UsedName(Rate,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(unapply,[Default]), UsedName(productElementName,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(copy$default$2,[Default]), UsedName(com;orm;api;Api;Rate;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(tupled,[Default]), UsedName(curried,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName($init$,[Default]), UsedName(copy,[Default]), UsedName(productArity,[Default]), UsedName($isInstanceOf,[Default]), UsedName(value,[Default]).
[debug] 	> by transitive inheritance: Set(com.orm.api.Api.Rate)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.orm.api.Api...
[debug] Initial set of included nodes: com.orm.api.Api
[debug] Invalidated by transitive inheritance dependency: Set(com.orm.api.Api)
[debug] Change NamesChange(com.orm.api.Api,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(Currency,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(convert,[Default]), UsedName(synchronized,[Default]), UsedName(Rate,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(getSymbols,[Default]), UsedName(ne,[Default]), UsedName(getCurrencies,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Api,[Default]), UsedName(getLatestRates,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.orm.api.Api has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(Currency,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(convert,[Default]), UsedName(synchronized,[Default]), UsedName(Rate,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(getSymbols,[Default]), UsedName(ne,[Default]), UsedName(getCurrencies,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Api,[Default]), UsedName(getLatestRates,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.orm.api.Api)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] Invalidating (transitively) by inheritance from com.mathapp.ui.UI...
[debug] Initial set of included nodes: com.mathapp.ui.UI
[debug] Invalidated by transitive inheritance dependency: Set(com.mathapp.ui.UI)
[debug] Change NamesChange(com.mathapp.ui.UI,ModifiedNames(changes = UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(UI,[Default]), UsedName(init,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(parameters,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(main,[Default]), UsedName(stage,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hostServices,[Default]), UsedName($init$,[Default]), UsedName(stopApp,[Default]), UsedName($isInstanceOf,[Default]))) invalidates 1 classes due to The com.mathapp.ui.UI has the following regular definitions changed:
[debug] 	UsedName(equals,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(==,[Default]), UsedName(getClass,[Default]), UsedName(notify,[Default]), UsedName(UI,[Default]), UsedName(init,[Default]), UsedName(isInstanceOf,[Default]), UsedName(hashCode,[Default]), UsedName(delayedInit,[Default]), UsedName(synchronized,[Default]), UsedName(toString,[Default]), UsedName(!=,[Default]), UsedName(ne,[Default]), UsedName(parameters,[Default]), UsedName($asInstanceOf,[Default]), UsedName(##,[Default]), UsedName(main,[Default]), UsedName(stage,[Default]), UsedName(clone,[Default]), UsedName(notifyAll,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(hostServices,[Default]), UsedName($init$,[Default]), UsedName(stopApp,[Default]), UsedName($isInstanceOf,[Default]).
[debug] 	> by transitive inheritance: Set(com.mathapp.ui.UI)
[debug] 	> 
[debug] 	> 
[debug]         
[debug] New invalidations:
[debug] 	Set()
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] 	Set()
[debug] No classes were invalidated.
